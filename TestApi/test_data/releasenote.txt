                                                           ITL-00283-0419 Rev.12
東芝ソリューション共通基盤 CommonStyle(R)
バッチ処理フレームワーク Batch Conductor(R)
V1.7リリースノート

2016年 2月17日
東芝ソリューション(株)

1. はじめに

本アーカイブは、バッチ処理フレームワーク Batch Conductor(R) V1.7の配布用アーカ
イブです。本アーカイブの内容物のご利用に際しましては、共通基盤の使用許諾条件に
従います。


2. Batch Conductor(R)について

Batch Conductor(R)はジョブの実装と起動/監視制御のための基本機能を備えたバッチ処
理フレームワークです。Batch Conductor(R)を用いることで、JavaとSpring Batchを用い
たジョブの実装と、ジョブの起動順序制御および監視制御ができます。JavaとSpring 
Batchで実装されたジョブだけでなく、OS上の実行モジュールなどBatch Conductor(R)外
部のジョブも起動順序制御および監視の対象となります。Batch Conductor(R)は、ジョブ
を実行するジョブエンジン、ジョブの起動順序を制御するジョブマネージャ、Webアプリ
ケーションとして管理用画面を提供する監視制御UI、ジョブネット定義ファイルを編集す
るためのジョブネットエディタ、ジョブネット/ジョブ/スケジュールの不要となった実行
履歴を削除するための実行履歴削除機能、Webアプリケーションからジョブネットやジョブ
の起動、実行状況の参照、中断、再開、強制終了を行なえるBatch Conductor(R)Web
サービス(REST形式)から構成されます。
Batch Conductor(R)の機能概要をこれらの構成要素に分けて説明します。

(1) ジョブエンジンの機能
ジョブエンジンはジョブの起動と実行状態の監視のための機能を提供します。ジョブエン
ジンは、ジョブの実装/実行のためにSpring Batchを利用しています。Java でジョブを実
装する場合には、Spring Batchが提供するジョブ実装のための機能（ジョブのライフサイ
クル管理やトランザクション管理、データ入出力サポートなど）を利用できます。Spring
Batchを用いて実装されたジョブについては、起動と監視に加えて実行状態の制御(中断、
再開、強制終了)もできます。Java以外の言語で開発された実行モジュールも起動と監視
の対象となりますが、中断 / 再開や強制終了ができないなどの機能制限があります。

(2) ジョブマネージャの機能
ジョブマネージャはジョブネット定義で指定したジョブの起動順序に従ってジョブを起動
します。起動順序には逐次実行、並列実行、条件分岐とその組み合わせを指定できます。
ジョブネット定義はXML形式で記述します。指定した日時、指定した間隔でジョブネット
を起動させるスケジュール機能、ジョブネットの中断、再開、強制終了のリモート操作
および監視機能を提供します。ジョブを実行するジョブエンジンのマシンを分散配置し、
複数の異なるジョブ実行マシンを起動制御できます。

(3) 監視制御UI
監視制御UIは、Batch Conductor(R)を管理するためのWebアプリケーションです。ジョブ
マネージャが公開しているRMIインタフェースを介して、Batch Conductor(R)の全機能に
アクセスできます。ジョブ/ジョブネット定義の登録、ジョブネットの起動（スケジュー
ル起動、イベント起動）、ジョブ/ジョブネット実行状態の監視、実行中のジョブ/ジョブ
ネットの制御（中断、再開、強制終了）などをWebブラウザ上から行えます。

(4) ジョブネットエディタ
ジョブネットエディタはジョブネットを編集するためのスタンドアロンアプリケーション
です。ジョブネットエディタを利用すると、GUI操作でジョブネット定義を編集して、編
集結果をBatch Conductorのジョブネット定義ファイル形式で出力することができます。

(5) 実行履歴削除機能
実行履歴削除機能は、ジョブネット/ジョブ/スケジュールなどの不要となった実行履歴を
削除します。実行履歴削除機能はジョブエンジン上で実行されるジョブとして同梱されて
おり、スケジュール機能により定期的に実行履歴を削除できます。

(6) Batch Conductor(R) Webサービス
Webアプリケーションから呼び出して利用できるWebサービス(REST形式)です。ジョブ/
ジョブネットの読み込み、起動、実行状態の監視、中断、再開、強制終了など、Batch
Conductorの機能を利用できます。

3. 本アーカイブの内容の説明

このアーカイブは以下のディレクトリ構造になっています。

   [root]
     +- releasenote.txt : 本ファイル
     +- doc             : ドキュメント格納ディレクトリ
     |  +- guide        : プログラマーズガイド格納ディレクトリ
     |  +- javadoc      : APIリファレンス（JavaDoc形式）格納ディレクトリ
     +- editor          : ジョブネットエディタの配布ディレクトリ
     +- jobengine       : ジョブエンジンの配布ディレクトリ
     +- jobmanager      : ジョブマネージャの配布ディレクトリ
     +- lib             : 利用ライブラリ格納ディレクトリ
     +- ui              : 監視制御UI格納ディレクトリ
     +- webservice      : Webサービス/Webサービスサンプルプログラム
                          格納ディレクトリ
     +- autoConfig	: 自動設定機能の格納ディレクトリ


4. はじめにお読み頂きたいドキュメント

Batch Conductor(R)をお使い頂くにあたり、[root]\doc\guideにある以下のドキュメン
を最初にお読み下さい。

    ・BatchConductor_概要説明.pdf
      Batch Conductor (R)の概要をご理解いただくための資料です。

    ・BatchConductor_ユーザーズガイド（チュートリアル編）.pdf
      Batch Conductor(R)を初めて使う開発者向けの解説書です。
      サンプルプログラムを用いてBatch Conductor(R)の使い方を説明します。

5. 旧バージョンからの変更点
[1] V1.6 SP3からV1.7への変更点
Batch Conductor(R) V1.6 SP3からV1.7への変更では、以下が行なわれました。
(1) 非稼働日設定機能の追加
  ジョブネットに対して、非稼働日を設定できます。

(2) 自動設定機能の追加
　Batch Conductorが使用する設定情報を自動生成できます。

(3) commons-collectionsを同梱しなくなりました
同梱していたcommons-collections(v3.1.2)に脆弱性問題があり、またジョブマネージャが
使用していないため、同梱しなくなりました。

(4) 複数ジョブエンジンがデータベースを共有するシステム構成において、それぞれの
ジョブエンジン上で複数ジョブが同時刻に実行された場合、データベースのトランザクション
分離レベルに起因するエラーが発生し、ジョブが失敗する不具合を修正しました。

(5) HSQLDBをサポート対象から除外しました。

[2] V1.6 SP2から V1.6 SP3への変更点

Batch Conductor(R) V1.6 SP2からV1.6 SP3への変更では、下記の不具合を修正しました。

・ジョブネットの設定でジョブが一定の時間に完了しなかった場合にメールで通知する
機能の不具合。ジョブネット定義ファイルにおいて、ジョブの属性であるalertTime
(メール通知するまでの時間)を設定し動作させた場合、alertTimeを監視するスレッドが
増加し、OutOfMemoryErrorが発生し、ジョブマネージャが停止します。

・上記alertTimeの設定によるメール送信を行う際、ジョブネットに送信元と送信先を定義
するmail要素がない場合、NullPointerExceptionが発生する不具合。また送信先を空要素
(<to/>または<to></to>)として定義した場合、"null"という宛先に送信してしまう不具合。


[3] V1.6 SP1から V1.6 SP2への変更点

Batch Conductor(R) V1.6 SP1からV1.6 SP2への変更では、下記が行われました。

(1)Strutsに起因する監視制御UIの脆弱性を修正しました。
監視制御UIが利用しているStrutsに脆弱性問題(CVE-2014-0094、CVE-2014-0112、
CVE-2014-0113、CVE-2014-0114)が発見されました。不正なパラメータにより、
クラスローダを経由して任意のOSコマンドが実行されてしまう恐れがあります。
Strutsの脆弱性対策として、「同期リクエスト」と「マルチパートリクエスト」
の2つに対する対策が必要となります。同期リクエストの対策として、不正な
パラメータをブロックするためのServletFilterを導入しました。また、
マルチパートリクエストに対しては、V1.6 SP1において行ったApache Commons 
FileUploadライブラリの削除が脆弱性対策となっています。

(2)Tomcatを同梱しなくなりました。
同梱していたTomcatV7.0.41に脆弱性問題(CVE-2014-0050)が発見されました。
細工されたマルチパートリクエストにより、サービス運用妨害(DoS)攻撃を受ける
おそれがあります。
脆弱性対策が施されたバージョンを利用するという目的で、Tomcatを同梱しない
ことにしました。

[4] V1.6から V1.6 SP1への変更点
Batch Conductor(R) V1.6 からV1.6 SP1への変更では、下記が行われました。

(1)Apache Commons FileUploadに起因する監視制御UIの脆弱性を修正しました。
監視制御UIに同梱されていたCommons FileUploadに脆弱性問題(CVE-2014-0050)が
発見されました。不正なContent-Typeを含むmultipart形式のデータを受信した場合に
処理が無限ループに入ります。
対策として、監視制御UIの機能として利用していないため、Commons FileUploadライ
ブラリを削除しました。

(2) ジョブマネージャが利用するジョブ管理用のデータベースとしてOracleを利用した場合、
ジョブの起動が行われない不具合を修正しました。

[5] V1.5から V1.6への変更点
Batch Conductor(R) V1.5からV1.6への機能拡張では、以下の(1)に示す機能追加、およ
び、(2)に示す機能変更を行いました。
(1) Batch Conductor Webサービスの追加
  REST形式のWebサービスにより、Webアプリケーションからバッチ処理を実行できます。

(2) ジョブマネージャの更新
  Java-RMIにより監視制御APIを利用したアプリケーションで、ジョブエンジンを再起動
  した直後にアプリケーションでRMI接続を再度行うための処理が必要でしたが、不要に
　なりました。


[6] V1.4 SP5から V1.5への変更点
Batch Conductor(R) V1.4 SP5から V1.5への機能拡張として、以下が行なわれました。
・ジョブエンジンの可用性とスケーラビリティを向上しました。
  同じジョブエンジンIDを複数のジョブエンジンに設定することで、ジョブエンジングル
  ープを構成します。ジョブはジョブエンジングループのいずれかのジョブエンジンで実
  行されるようになります。このジョブエンジングループにより、以下が向上します。
    可用性: ジョブエンジングループのいずれかのジョブエンジンが障害等により停止
            した場合、同じグループの他の動作しているジョブエンジンによりジョブ
            ネットの実行を継続することができます。ただし、停止したジョブエンジン
            でジョブが実行されていた場合、そのジョブを再実行するかしないかは運用
            者が判断する必要があります。
    スケーラビリティ: ジョブエンジンを停止することなく、ジョブエンジングループに
                      ジョブエンジンを追加することができます。ただし、そのグルー
                      プを利用しているジョブネットは停止しておく必要があります。

・ジョブマネージャが障害等により再起動した場合、実行していたジョブネットのステー
  タスを中断または失敗のどちらかに選択できるようにしました。失敗とすることで、
  多重起動禁止となっているジョブネットを、ジョブマネージャの再起動後にも継続して
  スケジュール起動することが出来るようになります。

・外部ジョブの実行時に使用されるカレントディレクトリを、ジョブ定義ファイルで指定
  できるようにしました

・実行環境の拡張
  - Java SE 7対応
  - CentOS 6.4対応
  - PostgreSQL 9.1対応
  - Tomcat 7.0上で監視制御UIの動作対応

Batch Conductor(R) V1.4からV1.5では、以下の点が変更されています。V1.4から移行さ
れる際にはご注意ください。
・データベースのスキーマ
  旧バージョンからV1.5に移行する際にスキーマの変更が必要になります。詳細は
  「6. Batch Conductor(R) V1.5への移行手順」を参照してください。
・ジョブマネージャのRMI API
  本APIを使用して独自に監視制御アプリケーションを開発している場合は修正が必要に
  なる可能性が有ります。詳細は以下を参照してください。
  (1) Batch Conductor プログラマーズガイド（監視制御API編）（ITL-00283-0417）
     3.2節
  (2) Batch Conductor APIリファレンス（ITL-00283-0418）
     IJobManagerインターフェイス

※ 移行の詳細については「9. お問合せ先」までお問い合わせ下さい


[7] V1.4 SP4から V1.4 SP5への変更点
Batch Conductor(R) V1.4 SP4からV1.4 SP5への変更では下記の不具合を修正しました。
・多重起動禁止で失敗となったジョブネットの実行履歴に停止時刻が記録されず、実行
　履歴削除機能の削除対象とならない不具合。
・多重起動禁止で失敗となったジョブネットインスタンスがメモリ上から消去されず、
　メモリリークとなる不具合。

[8] V1.4 SP3から V1.4 SP4への変更点
Batch Conductor(R) V1.4 SP3からV1.4 SP4への変更では、複数のジョブエンジンが同じ
データベースのスキーマ(テーブル)を共有した場合、監視制御 UIにてジョブ一覧等の表
示が正しく行われない不具合を修正しました。

[9] V1.4 SP2からV1.4 SP3への変更点
・Batch Conductor(R) V1.4 SP2からV1.4 SP3への変更では、監視制御UIにおいて、発火
済みで再び発火しないスケジュールの情報が表示されるようにしました。
詳細は、8.不具合修正履歴 V1.4 SP3を参照ください。

・PostgreSQLにおけるスケジュール情報に登録できる文字列長の上限が、他RDBに合わせ
て修正しました(概要:半角250文字、CRON式:半角120文字まで)。

[10] V1.4 SP1からV1.4 SP2への変更点
Batch Conductor(R) V1.4 SP1からV1.4 SP2への変更では、監視制御UIにおいて、ジョブ
ネットインスタンス詳細画面を表示する際に、例外が表示される不具合を修正しました。
詳細は、8.不具合修正履歴 V1.4 SP2を参照ください。

[11] V1.4からV1.4 SP1への変更点
Batch Conductor(R) V1.4からV1.4 SP1への変更では、監視制御UIにおいてメール送信先
の表示の不具合を修正しました。詳細は、8.不具合修正履歴 V1.4 SP1を参照ください。

[12] V1.3からV1.4への変更点
Batch Conductor(R) V1.3からV1.4への機能拡張では、以下の機能が追加されました。
・実行履歴削除機能
  - 不要となったジョブネット、ジョブとスケジュールの実行履歴の削除

[13] V1.2からV1.3への変更点
Batch Conductor(R) V1.2からV1.3への機能拡張では、以下の機能が追加されました。

・ジョブネットエディタ

・実行環境の拡張
  - CentOS 5.4対応
  - PostgreSQL 8.4.2対応
  - Tomcat 6.0上でのジョブエンジンの動作対応

[14] V1.1からV1.2への変更点
Batch Conductor(R) V1.1からV1.2への機能拡張では、以下の機能が追加されました。

・監視制御UIの機能拡張
  - 画面仕様のカスタマイズ対応
    (CSSスタイルシート、ResourceBundle、ヘッダ/フッタ、
     ジョブ/ジョブネット制御ボタン（中断、再開、強制終了）の表示/非表示の設定）
  - 画面フローの改良
    (上部メニュー、「戻る」ボタン、スケジュール登録手順、各種操作の確認画面など)
  - ジョブ/ジョブネット詳細情報表示画面の改良
   （画面自動更新、履歴検索デフォルト期間の設定、完了したジョブネット詳細情報の
   参照など）
  - JMSサーバへのメッセージ送信
   （ジョブ起動、ジョブ終了メッセージを手動で送信する機能）

Batch Conductor(R) V1.1からV1.2では、以下の点が変更されています。V1.1から移行さ
れる際にはご注意ください。

・ジョブネット定義ファイルのスキーマ（名前空間）
・ジョブ定義ファイルのスキーマ（名前空間、schemaLocation）

[15] V1.0からV1.1への変更点
Batch Conductor(R) V1.0からV1.1への機能拡張では、以下の機能が追加されました。

・実行環境の拡張
  - Solaris 10対応
  - Oracle 10g対応
  - WebSphere V6.1上でのジョブエンジンの動作対応
  - ジョブエンジンとジョブマネージャのWindowsサービス化

・ジョブエンジンの機能拡張
  - Spring Batch 2.0対応
  - 外部ジョブのプロセスID取得（Windowsのみ）
  - ジョブの多重起動防止

・ジョブマネージャの機能拡張
  - メール通知（ジョブネットの失敗、ジョブの実行結果監視、ジョブの実行時間監視）
  - スケジュールの停止と再開
  - 失敗および強制終了したジョブネットの再実行
  - ジョブネットの多重起動防止

Batch Conductor(R) V1.0からV1.1では、以下の点が変更されています。V1.0から移行さ
れる際にはご注意ください。

・ジョブ定義ファイルのスキーマ
・ジョブネット定義ファイルのスキーマ
・Spring Batch 2.0対応 【Spring Batch 1.1.4には対応しない】
・ジョブマネージャのRMI API
・ジョブおよびジョブネット情報の登録、更新方法
・ジョブネットの起動パラメータの値およびジョブの返り値の型をIntからStringに変更
・データベースのスキーマ

6. Batch Conductor(R) V1.7への移行手順

・Batch Conductor(R) V1.6 SP1、SP2、SP3をご利用の方は、下記の手順に従って、移行してください。
　-[root]/jobmanager/dist/jobmanager-1.4.jarを既存のjobmanager-1.4.jarに置き換えて
  　使用してください。
  - 下記の手順[3]に従って、監視制御UIを再インストールしてください。

・Batch Conductor(R) V1.6をご利用の方は、下記の手順に従って、移行してください。
  - 下記の手順[3]に従って、監視制御UIを再インストールしてください。
  -[root]/jobmanager/dist/jobmanager-1.4.jarを既存のjobmanager-1.4.jarに置き換えて
  　使用してください。
　- ジョブマネージャが利用するジョブ管理用のデータベースとしてOracleをご利用の方は、
    下記手順[6]に従って、JOB_INSTANCE_STATUSテーブルを再構築してください。
・Batch Conductor(R) V1.5をご利用の方は、下記の手順に従って、移行してください。
  - 下記の手順[3]に従って、監視制御UIを再インストールしてください。
  - [root]/jobmanager/dist/jobmanager-1.4.jarを既存のjobmanager-1.4.jarに置き換えて
  　使用してください。
　- ジョブマネージャが利用するジョブ管理用のデータベースとしてOracleをご利用の方は、
    下記手順[6]に従って、JOB_INSTANCE_STATUSテーブルを再構築してください。
・Batch Conductor(R) V1.2、V1.3、V1.4をご利用の方は、下記の手順[1][2][3]に従って
  Batch Conductorを再インストールして下さい。
・Batch Conductor(R) V1.1をご利用の方は、下記の手順[1][2][3]に従ってBatch Condutor
  を再イントールした上で、下記の手順[4]に従って移行を行ってください。
・Batch Conductor(R) V1.0をご利用の方は、下記の手順[1][2][3]に従ってBatch Condutor
  を再イントールした上で、下記の手順[5]に従って移行を行ってください。

[1] ジョブエンジンの再インストール手順
(a) 前バージョンの[root]/jobengine/distにあるjobengine-1.*.*.jarを削除し、
    jobengine-1.4.jarを配置してください。
(b) 前バージョンの[root]/jobengine/binにある以下のファイルを取り替えてください。
    これらのファイルでは、(a)への対応と、postgresql-9.1-903.jdbc4.jarを使用する修正
    を行っています。本リリースパッケージのファイルを実行環境のファイルと取り替えた
    後、実行環境に応じて batファイル、または、shファイルの JDBCドライバへのパスを
    変更して実行して下さい。
    ジョブエンジンの Windowsサービス化を行っている場合は、そのサービスの停止・削
    除を行い、新しいジョブエンジンにより再度サービス化を行ってください。
    - startJobEngine.bat
    - JobEngineService.bat
    - startJobEngine.sh
(c) 前バージョンの[root]/jobengine/sqlにある以下のファイルを取り替えてください。
    | 旧ファイル                 | 新ファイル                 |
    |----------------------------+----------------------------|
    | jobengine_drop.sql         | jobengine-drop.sql         |
    | jobengine_oracle.sql       | jobengine-oracle.sql       |
    | jobengine_postgresql.sql   | jobengine-postgresql.sql   |
    | schema-drop-oracle10g.sql  | schema-drop-oracle.sql     |
    | schema-drop-postgresql.sql | schema-drop-postgresql.sql |
    | schema-oracle10g.sql       | schema-oracle.sql          |
    | schema-postgresql.sql      | schema-postgresql.sql      |
(d) 下記のデータベース・テーブルを再構築してください。
    - 以下のSQL文を利用して、JobテーブルとJob_Instanceテーブルを再構築してください
      この際、登録されているジョブとジョブ実行の履歴データが削除されてしまいます。
      お手数をおかけして申し訳ありませんが、ジョブの再登録、及び、ジョブ実行の履歴
      データが必要な場合は履歴データの退避を行ってください。
      データベース・スキーマの削除では以下の SQL文を使用してください。
      jobengine/sql/jobengine-drop.sql

      新しいデータベース・スキーマの作成ではデータベースの種類に応じて、以下の
      いずれかのSQL文を使用してください。
      jobengine/sql/jobengine-oracle.sql
      jobengine/sql/jobengine-postgresql.sql
(e) 外部ジョブ定義ファイルでカレントディレクトリ指定オプションを使用する場合は、
    以下のスキーマファイルを jobengine/dist以下に配置して使用してください。
    jobengine/dist/batch-conductor-job-1.3.xsd
(f) 以下の使用しているOSSのファイルを置き換えます
    | 旧ファイル              | 新ファイル                |
    |-------------------------+---------------------------|
    | commons-dbcp-1.2.2.jar  | commons-dbcp-1.4.jar      |
    | commons-lang-2.1.jar    | commons-lang-2.6.jar      |
    | commons-logging-1.1.jar | commons-logging-1.1.3.jar |
    | commons-pool-1.4.jar    | commons-pool-1.6.jar      |
    | log4j-1.2.12.jar        | log4j-1.2.17.jar          |

[2] ジョブマネージャの再インストール手順
(a) 前バージョンの[root]/jobmanager/distにあるjobmanager-1.*.*.jarを削除し、
    jobmanager-1.4.jarを配置してください。
(b) 前バージョンの[root]/jobmanager/binにある以下のファイルを取り替えてください。
    - startJobManager.bat
    - JobManagerService.bat
    - startJobManager.sh
(c) 前バージョンの[root]/jobmanager/sqlにある以下のファイルを取り替えてください。
    | 旧ファイル                            | 新ファイル                              |
    |---------------------------------------+-----------------------------------------|
    | jobmanager_drop.sql                   | jobmanager-drop.sql                     |
    | jobmanager_oracle.sql                 | jobmanager-oracle.sql                   |
    | jobmanager_postgresql.sql             | jobmanager-postgresql.sql               |
    | quartz-1.6.6_tables_oracle.sql        | quartz-1.6.6-tables-oracle.sql          |
    | quartz-1.6.6_tables_postgres.sql      | quartz-1.6.6-tables-postgresql.sql      |
    | quartz-1.6.6_tables_drop_oracle.sql   | quartz-1.6.6-tables-drop-oracle.sql     |
    | quartz-1.6.6_tables_drop_postgres.sql | quartz-1.6.6-tables-drop-postgresql.sql |

(d) 下記のデータベーステーブルを再構築してください。
    - 以下のSQL文を利用して、Scheduleテーブルを構築してください
      jobmanager-drop.sqlにある「DROP TABLE SCHEDULE」文
      jobmanager-[DB名].sqlにある「CREATE TABLE SCHEDULE」文

    - PostgreSQLを利用する場合、以下のSQL文を利用してQuartz用テーブルを
      再構築してください
      quartz-1.6.6-tables-drop-postgresql.sql
      quartz-1.6.6-tables-postgresql.sql
(e) 以下の使用しているOSSのファイルを置き換えます
    | 旧ファイル                | 新ファイル                |
    |---------------------------+---------------------------|
    | commons-logging-1.1.1.jar | commons-logging-1.1.3.jar |
    | commons-pool-1.3.jar      | commons-pool-1.6.jar      |
    | log4j-1.2.15.jar          | log4j-1.2.17.jar          |

[3] 監視制御UIの再インストール手順
(a) 前バージョンの監視制御UI(webapps/BatchConductorUI)をバックアップ用のフォルダに移動
　　してください。
(b) [root]/ui/BatchConductorUI.warをTomcatに配置し、Tomcatを再起動してください。
(c) 下記のログファイルに「ExcludeParamCheckFilter running.」が出力されることを確認
　　してください。
    ・[Tomcatルート]/logs/localhost.yyyy-mm-dd.log

[4] Batch Conductor(R) V1.1をご利用の方
(a) Batch Conductor(R) V1.1上でジョブおよびジョブネットを実装されている方
Batch Conductor(R) プログラマーズガイド（ジョブ・ジョブネット編）をご覧になり、
以下のファイルをV1.2/1.3/V1.4/V1.4 SP1/V1.5向けに修正してください。
V1.1からの変更箇所は各定義ファイルの名前空間とschemaLocationのみです。
    ・ジョブ定義ファイル（5章）
    ・ジョブネット定義ファイル（6章）

Batch Conductor(R) プログラマーズガイド（ジョブ・ジョブネット編）を覧になり、
上で修正した各定義ファイルをBatch Conductor(R) に登録してください。
    ・Batch Conductor(R) のインストール（3章）
    ・ジョブ定義とジョブネット定義の登録（4章）

(b) Batch Conductor(R) V1.1のRMIインタフェースをご利用の方
Batch Conductor(R) V1.1のRMIインタフェースをご利用の方（独自に管理用UIを開発され
た場合など）は、Batch Conductor(R) プログラマーズガイド(監視制御API編)をご覧になり、
プログラムを変更してください。

[5] Batch Conductor(R) V1.0をご利用の方
(a) Batch Conductor(R) V1.0上でジョブおよびジョブネットを実装されている方
Batch Conductor(R) プログラマーズガイド（ジョブ・ジョブネット編）をご覧になり、
以下のファイルをV1.2/V1.3/V1.4/V1.4 SP1/V1.5向けに修正してください。
V1.0からの変更箇所は各定義ファイルの名前空間とschemaLocation のみではなく、
各定義ファイルへ設定すべき項目なども変更されています。
    ・ジョブ定義ファイルとジョブ実装（5章）
    ・ジョブネット定義ファイル（6章）

Batch Conductor(R) プログラマーズガイド（ジョブ・ジョブネット編）を覧になり、
上で修正した各定義ファイルをBatch Conductor(R)に登録してください。
    ・Batach Conductor(R) のインストール（3章）
    ・ジョブ定義とジョブネット定義の登録（4章）

(b) Batch Conductor(R) V1.0のRMIインタフェースをご利用の方
Batch Conductor(R) V1.0のRMIインタフェースをご利用の方（独自に管理用UIを開発され
た場合など）は、Batch Conductor(R) プログラマーズガイド(監視制御API編)をご覧になり、
プログラムを変更してください。

[6]JOB_INSTANCE_STATUSテーブルの再構築手順
以下のSQL文を利用して、JOB_INSTANCE_STATUSテーブルを構築してください
     jobmanager-drop.sqlにある「DROP TABLE JOB_INSTANCE_STATUS」文
     jobmanager-oracle.sqlにある「CREATE TABLE JOB_INSTANCE_STATUS」文

※JOB_INSTANCE_STATUSテーブルの項目「JOBENGINE_URI」に対して既にNOT NULL制約を
　外している場合は、上記の手順は実施不要です。
※ジョブマネージャが利用するジョブ管理用のデータベースとしてPostgreSQLをご利用の方は、
　そのまま継続利用可能で、上記の手順は実施不要です。

7. 機能追加履歴
[1] V1.7 (2016/2/17)
「5. 旧バージョンからの変更点 [1] 」を参照してください

[2] V1.6 (2013/12/9)
「5. 旧バージョンからの変更点 [5] 」を参照してください

[3] V1.5 (2013/9/9)
Batch Conductor(R) V1.4からV1.5では、以下の機能拡張を行いました。
・ジョブエンジンの可用性とスケーラビリティの向上
  可用性: ジョブエンジングループのいずれかのジョブエンジンが障害等により停止した
          場合、同じグループの他のジョブエンジンによりジョブネット実行の継続
  スケーラビリティ: ジョブエンジンを停止することなく、ジョブエンジングループに
                    ジョブエンジンを追加可能

[4] V1.4 (2011/1/31)
Batch Conductor(R) V1.3からV1.4では、以下の機能が追加されました。
・実行履歴削除機能
  - 不要となったジョブネット、ジョブとスケジュールの実行履歴の削除

[5] V1.3 (2010/7/16)
Batch Conductor(R) V1.2からV1.3では、以下の機能が追加されました。

・ジョブネットエディタ
  - GUI操作によるジョブネット定義の編集
  - ジョブネット定義ファイルの出力

・実行環境の拡張
  - CentOS 5.4対応
  - PostgreSQL 8.4.2対応
  - Tomcat 6.0上でのジョブエンジンの動作対応

[6] V1.2 (2010/5/7)
Batch Conductor(R) V1.1からV1.2では、以下の機能が追加されました。

・監視制御UIの機能拡張
  - 画面仕様のカスタマイズ対応
  - 画面フローの改良
  - ジョブ/ジョブネット詳細情報表示画面の改良
  - JMSサーバへのメッセージ送信

[7] V1.1 (2010/1/14)
Batch Conductor(R) V1.0からV1.1では、以下の機能が追加されました。

・実行環境の拡張
  - Solaris 10対応
  - Oracle 10g対応
  - WebSphere V6.1上でのジョブエンジンの動作対応
  - ジョブエンジンとジョブマネージャのWindowsサービス化

・ジョブエンジンの機能拡張
  - Spring Batch 2.0対応
      (注) Batch Conductor V1.0はSpring Batch 1.1.4に対応していましたが、
           Batch Conductor V1.1以降はSpring Batch 1.1.4に対応しません。
  - 外部ジョブのプロセスID取得（Windowsのみ）
  - ジョブの多重起動防止

・ジョブマネージャの機能拡張
  - メール通知（ジョブネットの失敗、ジョブの実行結果監視、ジョブの実行時間監視）
  - スケジュールの停止と再開
  - 失敗および強制終了したジョブネットの再実行
  - ジョブネットの多重起動防止


8. 不具合修正履歴
[1] V1.7(2016/2/17)
「5. 旧バージョンからの変更点 [1] 」を参照してください

[2] V1.6 SP3 (2015/3/3)
「5. 旧バージョンからの変更点 [2] 」を参照してください

[3] V1.6 SP2 (2014/5/16)
「5. 旧バージョンからの変更点 [3] 」を参照してください

[4] V1.6 SP1 (2014/3/19)
「5. 旧バージョンからの変更点 [4] 」を参照してください

[5] V1.6 (2013/12/9)
特に無し

[6] V1.5 (2013/9/9)
特に無し

[7] V1.4 SP5 (2013/8/9)
(1) ジョブマネージャの修正
 -　多重起動禁止で失敗となったジョブネットの実行履歴に停止時刻が記録されず、実行
　履歴削除機能の削除対象とならない不具合を修正しました。
 -  多重起動禁止で失敗となったジョブネットインスタンスがメモリ上から消去されず、
　メモリリークとなる不具合を修正しました。

[8] V1.4 SP4 (2013/2/12)
(1) ジョブエンジンの修正
複数のジョブエンジンが同じデータベースのスキーマ(テーブル)を共有した場合、監視
制御UIにてジョブエンジン毎のジョブ一覧表示等が正しく行われない不具合を修正しま
した。

[9] V1.4 SP3 (2011/10/14)
(1) 監視制御UIとジョブマネージャの修正
ScheduleテーブルとQuartzが利用するテーブル(qrtz_job_details)間のデータ不整合によ
り、ジョブネットを削除できない不具合を修正し、合わせて発火済みで再び発火しないス
ケジュールが監視制御UIに表示されるようにしました。

[10] V1.4 SP2 (2011/8/1)
(1) ジョブマネージャの修正
監視制御UIにおいて、ジョブネットインスタンス詳細画面を表示する際に、停止中の
ジョブエンジンが存在する場合、RMIの接続例外が表示される不具合を修正しました。

[11] V1.4 SP1 (2011/6/20)
(1) 監視制御UIの修正
 - ジョブネットの読込、再読込と削除時に、ジョブネットの条件指定により送信される
   メールの送信先と送信元が逆になって表示される不具合を修正しました。
 - ジョブネットの詳細参照、読込、再読込と削除時に、メールの送信先が0件(ジョブ
   ネット定義ファイルに空要素<to/>または<to></to>として定義)の場合、画面に"null"
   文字列が表示される不具合を修正し、空欄として表示されるようにしました。

[12] V1.3 (2010/7/16)
(1) エラーメッセージの修正
不正なジョブ定義ファイルを再読み込みしたときに「通信エラーです」というエラーメッ
セージが表示される不具合を修正し、「ジョブ定義ファイルの読み込みに失敗しました」
と正しく表示されるようになりました。

(2) WebSphere V7.0上でジョブエンジンを動作させる際、DBMSとJMSサーバへ接続できな
いとジョブエンジン初期化が完了せず、アプリケーションサーバ自体の起動が完了しない
不具合を修正しました。ジョブエンジンがDBMSとJMSサーバへの接続待ち状態であっても、
アプリケーションサーバは起動するようになりました。

[13] V1.2 (2010/5/7)
(1) ジョブ定義/ジョブネット定義XMLスキーマの変更
ジョブ定義/ジョブネット定義のXMLスキーマの名前空間とschemaLocationを「TSOL共通基
盤 XML スキーマ名前空間規約(E006R001, 3/11初版)」に合わせて変更しました。

[14] V1.1 SP1 (2010/3/19)
(1) ジョブマネージャのジョブネット機能の修正条件分岐要素(switch)を入れ子で2つ
以上含むするジョブネットを正しく条件分岐できないという不具合を修正し、条件分岐
要素(switch)を入れ子で含むジョブネットを正しく実行できるようになりました。


9. お問合せ先

共通基盤担当部門
東芝ソリューション(株)
E-mail: tsol-cp@toshiba-sol.co.jp


10. 著作権及び商標

(C)Copyright Toshiba Solutions Corporation 2009-2016 All rights reserved.

・CommonStyle(R)は、東芝ソリューション(株)の登録商標です。
・Batch Conductor(R)は、東芝ソリューション(株)の登録商標です。
・Oracle、Java、Solarisは、米国Oracle Corporation 及びその子会社、
  関連会社の米国及びその他の国における登録商標です。
・WebSphereは、米国における米国International Business Machines Corp. の登録商標
  です。
・Windowsは、米国Microsoft Corporationの米国およびその他の国における商標または
  登録商標です。
・LinuxはLinus Torvalds氏の登録商標です。
・PostgreSQLはPostgreSQLの商標です。
・その他の製品名は、それぞれ関係する企業の商標または登録商標である可能性があり
  ます。
・This product includes software developed by the Apache Software Foundation
  (http://www.apache.org/).


11. 利用しているフリーソフトウェア一覧

本アーカイブに同梱しているもの
(1)  ActiveMQ 5.8.0 ( Apache License Version 2.0 )
(2)  Quartz 1.6.6 ( Apache License Version 2.0 )
(3)  Apache iBATIS 2.3.4 ( Apache License Version 2.0 )
(4)  Apache log4j 1.2.17  ( Apache License Version 2.0 )
(5)  spring-batch 2.0.4 ( Apache License Version 2.0 )
(6)  Apache Struts 1.3.10 ( Apache License Version 2.0 )
(7)  Apache Commons Daemon 1.0.15 ( Apache License Version 2.0 )
(8)  JavaMail 1.4.3 (Sun Microsystems独自のフリーライセンス)
(9) JAF 1.1.1 (Sun Microsystems独自のフリーライセンス)
(10) Eclipse Graphical Modeling Framework (Eclipse Public License - v1.0)
(11) Eclipse Rich Client Platform (Eclipse Public License - v1.0)
(12) Apache CXF 2.7.5 ( Apache License Version 2.0 )
(13) Gradle 2.9 ( Apache License Version 2.0 )

別途入手が必要なもの
(1) Oracle Java(TM) SE 7 (Oracle Binary Code License Agreement)
(2) PostgreSQL (The PostgreSQL Licence)
(3) PostgreSQL JDBC Driver (BSD Licence)
(4) Apache Tomcat 7.0.x ( Apache License Version 2.0 )
(5) Batch Conductor Webサービスが利用するStaveware Coreに関連するもの
      Apache Struts 2.3.15.1 (Apache License Version 2.0)
      Spring Framework 3.1.1 (Apache License Version 2.0)
      MyBatis 3.1.1 (Apache License Version 2.0)
      MyBatis-Spring 1.1.1 (Apache License Version 2.0)
      jQuery 1.7.2 (MIT License)
      SLF4J 1.6.5 (MIT License)
      Logback 1.0.6 (Eclipse Public License v1.0)
      aspectj 1.6.8 (Eclipse Public License v1.0)


(注) Spring Batchに同梱されているHibernate、Javassist Java Programming Assistant、
JBossCommon UtilitiesはLGPLライセンスで配布されているので、利用条件に注意してく
ださい。ジョブエンジンではこれらのライブラリを利用しておらず、本アーカイブのジョ
ブエンジンのフォルダ（[root]\jobengine以下）にはこれらのライブラリを含めていませ
ん。


12. 安全に関するご注意
正しく安全にお使いいただくために、ご使用前に必ず取扱・操作に関する説明書をよくお
読み下さい。


13. ご使用上のお願い

プログラムやデータの保護について
・プログラムやデータの破壊・損失に備えて、重要な内容は定期的にバックアップをとっ
  てください。
・データを保存するときは、以下の事項をお守りください。
  - システムの動作中は電源を切らないでください。
  - フロッピーディスク、磁気テープなどの記憶媒体を初期化する場合は、その中に重要
    なプログラムやデータがないことを確かめてから行ってください。
  - フロッピーディスク装置、磁気テープ装置などの記憶装置が動作中は、記憶媒体を
    取り出さないでください。


14. 制限事項 / 注意事項

以下にBatch Conductor(R)の制限事項と注意事項を示します。
詳細についてはプログラマーズガイド(ジョブ・ジョブネット編)の7章をご参照ください。

[1] 制限事項
・データベース切断中にジョブが完了した場合、ジョブの完了情報を記録できません。個々
  のジョブ実装内で、ジョブの完了情報をアプリケーションのログとして記録してください。

・データベース接続が切れてから検証クエリ発行までにデータベースアクセスを試みると、
  初回アクセスに失敗します。検証クエリ発生間隔を適切に設定してください。

・ジョブエンジンをTomcat 6.0上で実行する場合、Tomcat 6.0を停止してもTomcat 6.0の
  プロセスが残ります。Tomcat 6.0停止後に、残ったプロセスを手動で終了してください。

・ジョブネットエディタで使用しているEclipse GMFの不具合により、描画要素をコピーで
  きなくなることがあります。その場合、別操作をしてからコピー操作を試みてください。

・ジョブネット描画データのファイル名は、新規エディタ画面を開く際に指定した名前から
　変更することはできません。また別名で保存することもできません。

・Spring Batchが利用するテーブル名の接頭辞を変更した場合は、実行履歴削除機能により
　Spring Batchの実行履歴を削除することはできません。

・監視制御UIのジョブネット起動パラメータには「_（アンダースコア）」を使えません。
  実行履歴削除機能で「_」を含むIDを指定する場合、初期設定ファイルで設定してください。

・監視制御UIのジョブネット起動パラメータには「,（半角カンマ）」を使えません。実行
  履歴削除機能でパラメータ値を複数指定する場合、初期設定ファイルで設定してください。

・実行履歴削除機能の処理は中断や強制終了できません。中断または強制終了の指示をしても、
　実行履歴削除機能が最後まで実行されます。

・多重起動防止と設定されたジョブがジョブエンジングループで実行される場合、実行する
　ジョブエンジンにより挙動が異なる場合があります。この場合は、ジョブネットの多重起動
　防止機能の利用をご検討ください。

[2] 注意事項
・Batch Conductor(R)のジョブエンジンを起動したコンソールに、Spring Batchフレーム
  ワークからthrowされた例外のトレースが表示されることがあります。

・起動パラメータの値には、nullを指定しないようにしてください。

・Windowsサービスとしてジョブエンジンを起動したときは、ジョブエンジン停止時に
  おける待ち時間を設定しても、Windowsサービスの停止時間が優先されます。

・ジョブエンジンを起動した時に、Log4Jから警告が出力されますが、ジョブエンジンの
  正常動作には支障がありません。

・メール送信先が空要素(<to/>、<to></to>)のジョブネットを監視制御APIで参照すると、
  返却値のto要素はNULLまたは文字列"null"一つのString配列となります。メールを送信
  しない場合、to要素に空要素を設定しないでください。 

・監視制御UIにおいて、ジョブエンジンに問い合わせする処理を含む画面では、停止中の
  ジョブエンジンが存在する場合、ジョブエンジンからの応答を待つため、表示に時間が
  かかることがあります。

・ジョブ、ジョブネットの実行履歴が大量に蓄積された場合、監視制御UIのジョブ詳細、
　ジョブネット詳細の画面表示に時間がかかることがあります。

・実行履歴削除機能で、多数の実行履歴を削除すると時間がかかる場合があります。
  例えば、CPU 3GHzのマシンで15000件を削除する場合、60秒程度を要します。
  なお、この数値は、システム構成やマシンスペックにより異なります。

以下はV1.4 SP3で追加された注意事項です。

・スケジュールが設定されているジョブネットは削除できません。先にスケジュールを
  削除してから、ジョブネットを削除してください。

・発火済みで再び発火しないスケジュールを、発火しないCRON式で更新しエラーが発生した
  場合、ダミーのCRON式が登録されます。そのため、ユーザは発火できるCRON式で再更新を
  行う必要があります。

・発火済みで再び発火しないスケジュールは自動的に削除されません。監視制御UIまたは
  実行履歴削除機能を用いて、不要なスケジュールを削除してください。

以下はV1.4 SP4で追加された注意事項です。

・複数のジョブエンジンがデータベースのスキーマを共有している場合に、監視制御APIに
  よりジョブを削除するときに指定するジョブエンジンIDは、そのジョブエンジンに削除を
  指示する、という意味になります。他のジョブエンジンにより登録されたジョブも削除
  されます。

・ジョブネットについての説明（<description>タグ）が記入されていないジョブネットを
  ジョブネットエディタで開いた場合、ジョブネットが表示されません。必ずジョブネット
  には説明（<description>タグ）を記載してください。

以下はV1.5で追加された注意事項です。

・ActiveMQ Ver.5.8はキューに65以上のメッセージが滞留した状態で、ActiveMQの管理
  コンソールによりキューの詳細表示を行うとActiveMQでOutOfMemoryErrorが発生します。
  Batch Conductorを利用・運用する上でキューの詳細表示は必要ないため、その表示は
  行わないでください。

以下はV1.6で追加された注意事項です。

・Java-RMIにより監視制御APIを利用したアプリケーションを作成する場合、以下のAPIに
  ついては同時アクセスを行うと不正な処理結果となることがあります。そのため、アプ
  リケーションでの呼び出しでは以下のAPIについて同時アクセスしないようにしてくだ
  さい。
  - registerJobEngine
  - loadJob
  - reloadJob
  - deleteJob
  - updateSchedule

・監視制御UIでは、前項に示す同時アクセスができないAPIを利用しているため、監視制御UIを
  利用する場合は、複数の監視制御UIから以下の操作を同時に行わないようにしてください。
　- ジョブエンジンの登録
  - ジョブの読み込み
  - ジョブの再読み込み
  - ジョブの削除
  - スケジュールの更新

-- 以上 --
